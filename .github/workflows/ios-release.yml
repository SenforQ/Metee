name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          export ONLY_ACTIVE_ARCH=NO
          export VALID_ARCHS="arm64"
          export ARCHS="arm64"
          rm -rf ios/build
          rm -rf build/ios
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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
          
          certificate-password: 111111
          
          provisioning-profile-base64: 


          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/zinko.ipa"
          APPLE_ID: "PageEldon58434@outlook.com"
          APP_SPECIFIC_PASSWORD: "xwbp-ywgm-jhkn-iffv"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
